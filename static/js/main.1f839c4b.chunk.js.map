{"version":3,"sources":["assets/styles/GlobalStyle.js","assets/styles/theme.js","components/templates/MainTemplate.style.js","components/atoms/AppTitle/AppTitle.style.js","components/atoms/AppTitle/AppTitle.js","components/atoms/MenuIcon/MenuIcon.style.js","components/atoms/MenuIcon/MenuIcon.js","components/molecules/Nav/Nav.style.js","components/molecules/Nav/Nav.js","components/templates/MainTemplate.js","hooks/useLocalStorage.js","assets/types.js","reducers/counterReducer.js","hooks/useCounter.js","reducers/settingsReducer.js","assets/initialSettings.js","reducers/tasksReducer.js","assets/helpers/setActiveTask.js","assets/helpers/findId.js","assets/helpers/findTaskIndex.js","assets/helpers/setIsOpen.js","providers/PomodoroProvider.js","assets/helpers/handleNextInterval.js","hooks/useSettings.js","hooks/useTasks.js","views/PomodoroTimer/PomodoroTimer.style.js","components/molecules/ActiveTask/ActiveTask.style.js","components/atoms/TasksLink/TaskLink.style.js","components/atoms/TasksLink/TasksLink.js","components/molecules/ActiveTask/ActiveTask.js","components/molecules/Counter/Counter.style.js","assets/helpers/formatTime.js","components/atoms/CounterDisplay/CounterDisplay.style.js","components/atoms/CounterDisplay/CounterDisplay.js","components/atoms/Button/Button.style.js","components/atoms/Button/Button.js","assets/sounds/analog-watch-alarm_daniel-simion.mp3","components/atoms/Sound/Sound.js","components/molecules/Counter/Counter.js","components/molecules/IntervalInfo/IntervalInfo.styled.js","components/molecules/IntervalInfo/IntervalInfo.js","assets/helpers/handleIntervalInfo.js","components/organisms/Settings/Settings.style.js","components/organisms/SettingsForm/SettingsForm.style.js","components/atoms/FormField/FormField.style.js","components/atoms/FormField/FormField.js","components/atoms/FormButton/FormButton.style.js","components/atoms/FormButton/FormButton.js","components/atoms/ErrorMessage/ErrorMessage.style.js","components/atoms/ErrorMessage/ErrorMessage.js","components/organisms/SettingsForm/SettingsForm.js","assets/helpers/isSettingsFormValid.js","components/organisms/Settings/Settings.js","components/atoms/BackgroundBlured/BackgroundBlured.js","views/PomodoroTimer/PomodoroTimer.js","views/PomodoroTasks/PomodoroTasks.style.js","components/organisms/AddTask/AddTask.style.js","components/atoms/AddTaskButton/AddTaskButton.style.js","components/atoms/AddTaskButton/AddTaskButton.js","components/molecules/AddTaskForm/AddTaskForm.style.js","components/molecules/AddTaskForm/AddTaskForm.js","components/organisms/AddTask/AddTask.js","components/organisms/TasksList/TasksList.style.js","components/molecules/Task/Task.style.js","components/molecules/TaskEditForm/TaskEditForm.style.js","components/molecules/TaskEditForm/TaskEditForm.js","components/atoms/TaskTotalTime/TaskTotalTime.style.js","components/atoms/TaskTotalTime/TaskTotalTime.js","components/molecules/Task/Task.js","components/organisms/TasksList/TasksList.js","views/PomodoroTasks/PomodoroTasks.js","views/Root.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","colors","BLACK","green","violet","violetTransparent","red","white","black","AppContainer","styled","div","Wrapper","StyledHeader","header","StyledTitle","h1","AppTitle","StyledIcon","FontAwesomeIcon","MenuIcon","onClick","icon","faEllipsisV","size","NavContainer","nav","isNavVisible","StyledLink","NavLink","Nav","to","exact","MainTemplate","children","useState","setIsNavVisible","handleIsNavVisible","useLocalStorage","saveDataInStorage","name","data","localStorage","setItem","JSON","stringify","getDataFromStorage","parse","getItem","types","counterReducer","state","action","type","counterValue","value","isRunning","isWorkInterval","workIntervals","initialState","tasks","settingsReducer","isSettingsActive","intervals","initialSettings","workTime","shortBreak","longBreak","longBreakIntervals","tasksReducer","setActiveTask","id","map","task","isActive","findId","element","parentNode","Number","findTaskIndex","e","taskId","target","findIndex","setIsOpen","isOpen","PomodoroContext","React","createContext","settings","handleStartStopCount","handleShowSettings","handleSaveSettings","handleDefaultSettings","handleSetActiveTask","handleAddTask","PomodoroProvider","useReducer","counter","dispatchCounter","handleCount","handleEndInterval","setNextInterval","intervalsNumber","setCounterValue","useCounter","dispatchSettings","saveSettings","showHideSettings","restoreDefaultSettings","getSettingsFromStorage","savedSettings","useSettings","dispatchTasks","newTaskId","Date","now","newTask","title","description","totalTime","updatedTasks","push","getTasksFromStorage","tasksList","handleDeleteTask","indexToDelete","modifiedTasks","splice","handleSaveTask","indexToModify","modifiedTask","tasksArr","calculateTotalTime","activeTaskIndex","showTaskDetails","useTasks","history","useHistory","location","useLocation","useEffect","interval","workerTimers","pathname","Provider","main","StyledText","Link","TasksLink","ActiveTask","useContext","activeTask","find","formatTime","time","seconds","minutes","Math","floor","StyledTime","CounterDisplay","StyledButton","button","Button","text","disabled","Sound","play","setPlay","src","sound","playing","preload","Counter","isActiveTask","StyledInterval","p","IntervalInfo","currentInterval","setCurrentInterval","handleIntervalInfo","className","StyledForm","ButtonsContainer","StyledLabel","label","StyledInput","input","FormField","onChange","htmlFor","min","required","FormButton","ErrorMessage","initialErrors","SettingsForm","settingsValues","setSettingsValues","formErrors","setFormErrors","handleSettingsInputChange","errors","isWorkTimeValid","isShortBreakValid","isLongBreakValid","isLongBreakIntervalsValid","isValid","isSettingsFormValid","Settings","BackgroundBlured","PomodoroTimer","TimerLink","AddTaskButton","form","StyledTaskInput","ButtonsWrapper","AddTaskForm","handleOpen","taskInputValue","setTaskInputValue","onSubmit","preventDefault","placeholder","AddTask","ul","li","rest","StyledTextArea","textarea","ButtonContainer","TaskEditForm","handleClose","formValues","setFormValues","initialTaskValues","handleInputChange","rows","maxLength","TaskTotalTime","hours","toFixed","Task","faCheckCircle","TasksList","handledeleteTask","PomodoroTasks","Root","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f839c4b.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\n*{\r\n    margin:0;\r\n    padding:0;\r\n    box-sizing:border-box;\r\n}\r\n\r\n\r\nhtml{\r\n    color:${({ theme }) => theme.colors.BLACK};\r\n    font-size:10px;\r\n  \r\n\r\n}\r\n\r\n*,*::after, *::before{\r\n    box-sizing:inherit;\r\n    margin:0;\r\n    padding:0;\r\n}\r\n\r\nbody{\r\n    font-family: \"Play\", sans-serif;\r\n    font-size:10px;\r\n    box-sizing:border-box\r\n}\r\n\r\na,button,input{\r\n    font-family:\"Play\", sans-serif;\r\n}\r\n\r\n`;\r\n","export const theme = {\r\n  colors: {\r\n    green: '#BFB48F',\r\n    violet: '#564E58',\r\n    violetTransparent: `rgba(86, 78, 88, 0.7)`,\r\n    red: '#904E55',\r\n    white: '#F2EFE9',\r\n    black: '#252627',\r\n  },\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const AppContainer = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledHeader = styled.header`\r\n  display: flex;\r\n  align-items: space-around;\r\n  width: 92%;\r\n  max-width: 1600px;\r\n  height: 10%;\r\n  margin: 0 auto;\r\n\r\n  @media (min-width: 700px) {\r\n    height: 15%;\r\n  }\r\n\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    height: 12%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 8%;\r\n    justify-content: center;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 90%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledTitle = styled.h1`\r\n  width: 100%;\r\n  font-size: 2.8em;\r\n  color: ${({ theme }) => theme.colors.violet};\r\n  text-align: center;\r\n  letter-spacing: 1px;\r\n  padding-bottom: 5px;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.red};\r\n  text-transform: uppercase;\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 3.8em;\r\n    padding-bottom: 20px;\r\n  }\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    font-size: 3.4em;\r\n    padding-bottom: 5px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 5em;\r\n    padding-bottom: 5px;\r\n  }\r\n`;\r\n","import { Wrapper, StyledTitle } from './AppTitle.style';\r\n\r\nconst AppTitle = () => {\r\n  return (\r\n    <Wrapper>\r\n      <StyledTitle>Pomodoro Deluxe</StyledTitle>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AppTitle;\r\n","import styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 10%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (min-width: 700px) {\r\n    width: 10%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const StyledIcon = styled(FontAwesomeIcon)`\r\n  height: 90%;\r\n  width: 100%;\r\n  color: ${({ theme }) => theme.colors.violet};\r\n  font-size: 2.8em;\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 5em;\r\n  }\r\n\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    font-size: 3em;\r\n  }\r\n`;\r\n","import { Wrapper, StyledIcon } from './MenuIcon.style';\r\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MenuIcon = ({ onClick }) => {\r\n  return (\r\n    <Wrapper onClick={onClick}>\r\n      <StyledIcon icon={faEllipsisV} size=\"3x\" />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nMenuIcon.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default MenuIcon;\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const NavContainer = styled.nav`\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  display: ${({ isNavVisible }) => (isNavVisible ? 'flex' : 'none')};\r\n  flex-direction: column;\r\n  transition: 0.6s;\r\n  animation: showNav 0.2s linear;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.violet};\r\n  transition: 0.5s;\r\n\r\n  @keyframes showNav {\r\n    from {\r\n      transform: scale(0);\r\n    }\r\n    to {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n    width: 90%;\r\n    border: none;\r\n    margin: 10px 0;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(NavLink)`\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  color: ${({ theme }) => theme.colors.violet};\r\n  font-size: 2.5em;\r\n  letter-spacing: 1px;\r\n  text-decoration: none;\r\n  padding: 8px 0;\r\n  font-weight: bold;\r\n\r\n \r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 3.5em;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    margin: 0 20px;\r\n    cursor: pointer;\r\n    transform: scale(1);\r\n    transition: 0.5s;\r\n    padding: 4px 0;\r\n    overflow: hidden;\r\n\r\n    &.active::first-letter{\r\n    color:${({ theme }) => theme.colors.red};\r\n  }\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      border-bottom: 4px solid ${({ theme }) => theme.colors.red};\r\n      transform: translateY(20px);\r\n      transition: 0.2s ease-in;\r\n     \r\n    }\r\n\r\n    &:hover {\r\n      color: ${({ theme }) => theme.colors.red};\r\n    }\r\n\r\n    &:hover::before {\r\n      transform: translateY(-4px);\r\n    }\r\n  }\r\n\r\n  }\r\n`;\r\n","import { NavContainer, StyledLink } from './Nav.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Nav = ({ onClick, isNavVisible }) => {\r\n  return (\r\n    <NavContainer isNavVisible={isNavVisible}>\r\n      <StyledLink onClick={onClick} to=\"/\" exact>\r\n        Timer\r\n      </StyledLink>\r\n      <StyledLink onClick={onClick} to=\"/tasks\">\r\n        Tasks\r\n      </StyledLink>\r\n    </NavContainer>\r\n  );\r\n};\r\n\r\nNav.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState } from 'react';\r\nimport { AppContainer, Wrapper, StyledHeader } from './MainTemplate.style';\r\n\r\nimport AppTitle from '../atoms/AppTitle/AppTitle';\r\nimport MenuIcon from '../atoms/MenuIcon/MenuIcon';\r\nimport Nav from '../molecules/Nav/Nav';\r\n\r\nconst MainTemplate = ({ children }) => {\r\n  const [isNavVisible, setIsNavVisible] = useState(false);\r\n\r\n  const handleIsNavVisible = () => {\r\n    setIsNavVisible(!isNavVisible);\r\n  };\r\n\r\n  return (\r\n    <AppContainer>\r\n      <Wrapper>\r\n        <StyledHeader>\r\n          <AppTitle />\r\n          <MenuIcon onClick={handleIsNavVisible} />\r\n        </StyledHeader>\r\n        <Nav onClick={handleIsNavVisible} isNavVisible={isNavVisible} />\r\n        {children}\r\n      </Wrapper>\r\n    </AppContainer>\r\n  );\r\n};\r\n\r\nexport default MainTemplate;\r\n","export const useLocalStorage = () => {\r\n  const saveDataInStorage = (name, data) => {\r\n    localStorage.setItem(`${name}`, JSON.stringify(data));\r\n  };\r\n\r\n  const getDataFromStorage = (name) => {\r\n    return JSON.parse(localStorage.getItem(name));\r\n  };\r\n\r\n  return {\r\n    saveDataInStorage,\r\n    getDataFromStorage,\r\n  };\r\n};\r\n","export const types = {\r\n  setCounterValue: 'SET_COUNTER_VALUE',\r\n  setIsRunning: 'SET_IS_RUNNING',\r\n  setIsWorkInterval: 'SET_IS_WORK_iNTERVAL',\r\n  setInterval: 'SET_INTERVAL',\r\n  count: 'COUNT',\r\n  increaseIntervals: 'INCREASE_INTERVALS',\r\n  showSettings: 'SHOW_SETTINGS',\r\n  saveSettings: 'SAVE_SETTINGS',\r\n  updateTasks: 'UPDATE_TASKS',\r\n};\r\n","import { types } from '../assets/types';\r\n\r\nexport const counterReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case types.setCounterValue:\r\n      return {\r\n        ...state,\r\n        counterValue: action.value * 60 * 1000,\r\n      };\r\n    case types.count:\r\n      return {\r\n        ...state,\r\n        counterValue: state.counterValue - 1000,\r\n      };\r\n    case types.setIsRunning:\r\n      return {\r\n        ...state,\r\n        isRunning: !state.isRunning,\r\n      };\r\n    case types.setIsWorkInterval:\r\n      return {\r\n        ...state,\r\n        isWorkInterval: !state.isWorkInterval,\r\n      };\r\n    case types.setInterval:\r\n      return {\r\n        ...state,\r\n        counterValue: action.value,\r\n      };\r\n    case types.increaseIntervals:\r\n      return {\r\n        ...state,\r\n        workIntervals: action.isWorkInterval ? state.workIntervals + 1 : state.workIntervals,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { useReducer } from 'react';\r\nimport { counterReducer } from '../reducers/counterReducer';\r\nimport { types } from '../assets/types';\r\nimport { handleNextInterval } from '../assets/helpers/handleNextInterval';\r\n\r\nconst initialState = {\r\n  isWorkInterval: true,\r\n  counterValue: 15000,\r\n  isRunning: false,\r\n  workIntervals: 0,\r\n  tasks: [],\r\n};\r\n\r\nexport const useCounter = () => {\r\n  const [counter, dispatchCounter] = useReducer(counterReducer, initialState);\r\n\r\n  const handleCount = () => {\r\n    dispatchCounter({ type: types.count });\r\n  };\r\n\r\n  const handleEndInterval = () => {\r\n    if (counter.counterValue === 0) {\r\n      dispatchCounter({ type: types.setIsRunning });\r\n      dispatchCounter({ type: types.increaseIntervals, isWorkInterval: counter.isWorkInterval });\r\n      dispatchCounter({ type: types.setIsWorkInterval });\r\n    }\r\n  };\r\n\r\n  const setNextInterval = (settings) => {\r\n    dispatchCounter({\r\n      type: types.setInterval,\r\n      value: handleNextInterval(settings.isWorkInterval, settings.intervalsNumber, settings.intervals) * 1000 * 60,\r\n    });\r\n  };\r\n\r\n  const setCounterValue = (settings) => {\r\n    dispatchCounter({ type: types.setCounterValue, value: settings.intervals.workTime });\r\n  };\r\n\r\n  const handleStartStopCount = () => {\r\n    dispatchCounter({ type: types.setIsRunning });\r\n  };\r\n\r\n  return {\r\n    counter,\r\n    handleCount,\r\n    handleEndInterval,\r\n    setNextInterval,\r\n    setCounterValue,\r\n    handleStartStopCount,\r\n  };\r\n};\r\n","import { types } from '../assets/types';\r\n\r\nexport const settingsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case types.showSettings:\r\n      return {\r\n        ...state,\r\n        isSettingsActive: !state.isSettingsActive,\r\n      };\r\n    case types.saveSettings:\r\n      return {\r\n        ...state,\r\n        intervals: action.intervals,\r\n        isSettingsActive: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const initialSettings = {\r\n  intervals: { workTime: 25, shortBreak: 5, longBreak: 20, longBreakIntervals: 4 },\r\n  isSettingsActive: false,\r\n};\r\n","import { types } from '../assets/types';\r\n\r\nexport const tasksReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case types.updateTasks:\r\n      return {\r\n        ...state,\r\n        tasks: action.tasks,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const setActiveTask = (tasks, id) => {\r\n  return tasks.map((task) => {\r\n    if (task.id === id) {\r\n      task.isActive = !task.isActive;\r\n    } else {\r\n      task.isActive = false;\r\n    }\r\n    return task;\r\n  });\r\n};\r\n","export const findId = (element) => {\r\n  while (!element.id) {\r\n    element = element.parentNode;\r\n  }\r\n  if (element.id) {\r\n    return Number(element.id);\r\n  } else return;\r\n};\r\n","import { findId } from './findId';\r\n\r\nexport const findTaskIndex = (e, tasks) => {\r\n  const taskId = findId(e.target);\r\n  const taskIndex = tasks.findIndex((task) => {\r\n    return task.id === taskId;\r\n  });\r\n  return taskIndex;\r\n};\r\n","export const setIsOpen = (tasks, id) => {\r\n  if (!id)\r\n    return tasks.map((task) => {\r\n      task.isOpen = false;\r\n      return task;\r\n    });\r\n\r\n  return tasks.map((task) => {\r\n    if (task.id === id && !task.isOpen) {\r\n      task.isOpen = !task.isOpen;\r\n    } else {\r\n      task.isOpen = false;\r\n    }\r\n    return task;\r\n  });\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport * as workerTimers from 'worker-timers';\r\nimport { useLocalStorage } from '../hooks/useLocalStorage';\r\nimport { useCounter } from '../hooks/useCounter';\r\nimport { useSettings } from '../hooks/useSettings';\r\nimport { useTasks } from '../hooks/useTasks';\r\nimport { initialSettings } from '../assets/initialSettings';\r\n\r\nexport const PomodoroContext = React.createContext({\r\n  settings: initialSettings,\r\n  handleStartStopCount: () => {},\r\n  handleShowSettings: () => {},\r\n  handleSaveSettings: () => {},\r\n  handleDefaultSettings: () => {},\r\n  handleSetActiveTask: () => {},\r\n  handleAddTask: () => {},\r\n});\r\n\r\nexport const PomodoroProvider = ({ children }) => {\r\n  const { counter, handleCount, handleEndInterval, setNextInterval, setCounterValue, handleStartStopCount } = useCounter();\r\n  const { settings, showHideSettings, saveSettings, restoreDefaultSettings, getSettingsFromStorage } = useSettings();\r\n  const {\r\n    tasks,\r\n    handleSetActiveTask,\r\n    handleAddTask,\r\n    getTasksFromStorage,\r\n    handleDeleteTask,\r\n    handleSaveTask,\r\n    calculateTotalTime,\r\n    showTaskDetails,\r\n  } = useTasks();\r\n  const { saveDataInStorage } = useLocalStorage();\r\n\r\n  const history = useHistory();\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    getSettingsFromStorage();\r\n    getTasksFromStorage();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (counter.isRunning) {\r\n      const interval = workerTimers.setInterval(() => {\r\n        handleCount();\r\n      }, 1000);\r\n      return () => workerTimers.clearInterval(interval);\r\n    }\r\n    return undefined;\r\n  }, [counter.isRunning]);\r\n\r\n  useEffect(() => {\r\n    if (counter.isWorkInterval) calculateTotalTime();\r\n    handleEndInterval();\r\n  }, [counter.counterValue]);\r\n\r\n  useEffect(() => {\r\n    setNextInterval(settings);\r\n  }, [counter.isWorkInterval]);\r\n\r\n  useEffect(() => {\r\n    saveDataInStorage('intervals', settings.intervals);\r\n    setCounterValue(settings);\r\n  }, [settings.intervals]);\r\n\r\n  useEffect(() => {\r\n    saveDataInStorage('tasks', tasks.tasks);\r\n  }, [tasks.tasks]);\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === '/') showTaskDetails();\r\n  }, [location]);\r\n\r\n  return (\r\n    <PomodoroContext.Provider\r\n      value={{\r\n        counter,\r\n        settings,\r\n        tasks,\r\n        history,\r\n        showHideSettings,\r\n        saveSettings,\r\n        restoreDefaultSettings,\r\n        handleSetActiveTask,\r\n        handleAddTask,\r\n        handleStartStopCount,\r\n        handleDeleteTask,\r\n        handleSaveTask,\r\n        showTaskDetails,\r\n      }}\r\n    >\r\n      {children}\r\n    </PomodoroContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PomodoroProvider;\r\n","export const handleNextInterval = (isWorkInterval, intervalsNumber, intervals) => {\r\n  if (isWorkInterval) return intervals.workTime;\r\n\r\n  if (intervalsNumber % 4 === 0) return intervals.longBreak;\r\n\r\n  return intervals.shortBreak;\r\n};\r\n","import { useReducer } from 'react';\r\nimport { settingsReducer } from '../reducers/settingsReducer';\r\nimport { types } from '../assets/types';\r\nimport { initialSettings } from '../assets/initialSettings';\r\nimport { useLocalStorage } from '../hooks/useLocalStorage';\r\n\r\nexport const useSettings = () => {\r\n  const [settings, dispatchSettings] = useReducer(settingsReducer, initialSettings);\r\n  const { getDataFromStorage } = useLocalStorage();\r\n\r\n  const showHideSettings = () => {\r\n    dispatchSettings({ type: types.showSettings });\r\n  };\r\n\r\n  const saveSettings = (intervals) => {\r\n    dispatchSettings({ type: types.saveSettings, intervals });\r\n  };\r\n\r\n  const restoreDefaultSettings = () => {\r\n    dispatchSettings({ type: types.saveSettings, intervals: initialSettings.intervals });\r\n  };\r\n\r\n  const getSettingsFromStorage = () => {\r\n    const savedSettings = getDataFromStorage('intervals');\r\n    if (savedSettings) saveSettings(savedSettings);\r\n  };\r\n\r\n  return {\r\n    settings,\r\n    showHideSettings,\r\n    saveSettings,\r\n    restoreDefaultSettings,\r\n    getSettingsFromStorage,\r\n  };\r\n};\r\n","import { useReducer } from 'react';\r\nimport { tasksReducer } from '../reducers/tasksReducer';\r\nimport { types } from '../assets/types';\r\nimport { setActiveTask } from '../assets/helpers/setActiveTask';\r\nimport { findId } from '../assets/helpers/findId';\r\nimport { useLocalStorage } from '../hooks/useLocalStorage';\r\nimport { findTaskIndex } from '../assets/helpers/findTaskIndex';\r\nimport { setIsOpen } from '../assets/helpers/setIsOpen';\r\n\r\nexport const useTasks = () => {\r\n  const [tasks, dispatchTasks] = useReducer(tasksReducer, { tasks: [] });\r\n  const { saveDataInStorage, getDataFromStorage } = useLocalStorage();\r\n\r\n  const getTasksFromStorage = () => {\r\n    const tasksList = getDataFromStorage('tasks');\r\n    if (tasksList) dispatchTasks({ type: types.updateTasks, tasks: tasksList });\r\n  };\r\n\r\n  const handleSetActiveTask = (e) => {\r\n    const id = findId(e.target);\r\n    dispatchTasks({ type: types.updateTasks, tasks: setActiveTask(tasks.tasks, id) });\r\n    saveDataInStorage('tasks', tasks.tasks);\r\n  };\r\n\r\n  const handleAddTask = (task) => {\r\n    const newTaskId = Date.now();\r\n    const newTask = { id: newTaskId, title: task, description: '', isActive: false, totalTime: 0, isOpen: false };\r\n    const updatedTasks = [...tasks.tasks];\r\n    updatedTasks.push(newTask);\r\n    dispatchTasks({ type: types.updateTasks, tasks: setActiveTask(updatedTasks, newTaskId) });\r\n  };\r\n\r\n  const handleDeleteTask = (e) => {\r\n    const indexToDelete = findTaskIndex(e, tasks.tasks);\r\n    const modifiedTasks = [...tasks.tasks];\r\n    modifiedTasks.splice(indexToDelete, 1);\r\n    dispatchTasks({ type: types.updateTasks, tasks: modifiedTasks });\r\n  };\r\n\r\n  const handleSaveTask = (e, title, description) => {\r\n    const indexToModify = findTaskIndex(e, tasks.tasks);\r\n    const modifiedTask = tasks.tasks[indexToModify];\r\n    modifiedTask.title = title;\r\n    modifiedTask.description = description;\r\n    const tasksArr = [...tasks.tasks];\r\n    tasksArr.splice(indexToModify, 1, modifiedTask);\r\n    dispatchTasks({ type: types.updateTasks, tasks: tasksArr });\r\n  };\r\n\r\n  const calculateTotalTime = () => {\r\n    const tasksArr = [...tasks.tasks];\r\n    const activeTaskIndex = tasksArr.findIndex((task) => task.isActive === true);\r\n\r\n    if (activeTaskIndex !== -1) {\r\n      tasksArr[activeTaskIndex].totalTime++;\r\n      dispatchTasks({ type: types.updateTasks, tasks: tasksArr });\r\n    }\r\n  };\r\n\r\n  const showTaskDetails = (e) => {\r\n    const id = e ? findId(e.target) : null;\r\n    dispatchTasks({ type: types.updateTasks, tasks: setIsOpen(tasks.tasks, id) });\r\n    saveDataInStorage('tasks', tasks.tasks);\r\n  };\r\n\r\n  return {\r\n    tasks,\r\n    handleSetActiveTask,\r\n    handleAddTask,\r\n    getTasksFromStorage,\r\n    handleDeleteTask,\r\n    handleSaveTask,\r\n    calculateTotalTime,\r\n    showTaskDetails,\r\n  };\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.main`\r\n  width: 100%;\r\n  height: 90%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media (orientation: landscape) {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 10%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-shrink: 0;\r\n\r\n  @media (orientation: landscape) {\r\n    height: 15%;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    height: 12%;\r\n  }\r\n`;\r\n\r\nexport const StyledText = styled.h1`\r\n  color: ${({ theme }) => theme.colors.red};\r\n  font-size: 2.4em;\r\n  font-weight: normal;\r\n  transform: scale(1);\r\n  transition: 0.5s;\r\n\r\n  &::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 3.6em;\r\n  }\r\n\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    font-size: 3.2em;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    cursor: pointer;\r\n    font-size: 4.6sem;\r\n\r\n    &:hover {\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const StyledLink = styled(Link)`\r\n  font-size: 3em;\r\n  color: ${({ theme }) => theme.colors.red};\r\n  text-decoration: none;\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 4em;\r\n  }\r\n`;\r\n","import { StyledLink } from './TaskLink.style';\r\n\r\nconst TasksLink = () => {\r\n  return <StyledLink to=\"/tasks\">Select Task</StyledLink>;\r\n};\r\n\r\nexport default TasksLink;\r\n","import React, { useContext } from 'react';\r\nimport { Wrapper, StyledText } from './ActiveTask.style';\r\nimport TaskLink from '../../atoms/TasksLink/TasksLink';\r\nimport { PomodoroContext } from '../../../providers/PomodoroProvider';\r\n\r\nconst ActiveTask = () => {\r\n  const {\r\n    tasks: { tasks },\r\n    history,\r\n  } = useContext(PomodoroContext);\r\n\r\n  const activeTask = tasks.find((task) => task.isActive === true);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {activeTask ? (\r\n        <StyledText\r\n          onClick={() => {\r\n            history.push('/tasks');\r\n          }}\r\n        >\r\n          {activeTask.title}\r\n        </StyledText>\r\n      ) : (\r\n        <TaskLink />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ActiveTask;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  height: 70%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n\r\n  @media (orientation: landscape) {\r\n    width: 60%;\r\n    height: 100%;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    height: 60%;\r\n  }\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    width: 60%;\r\n    height: 100%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 60%;\r\n    width: 100%;\r\n  }\r\n`;\r\n","export const formatTime = (time) => {\r\n  const seconds = (time / 1000) % 60;\r\n  const minutes = Math.floor(time / (1000 * 60));\r\n  return (\r\n    <div>\r\n      {minutes >= 10 ? minutes : '0' + minutes}\r\n      <span>:</span>\r\n      {seconds >= 10 ? seconds : '0' + seconds}\r\n    </div>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (orientation: landscape) {\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    height: 40%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 60%;\r\n  }\r\n`;\r\n\r\nexport const StyledTime = styled.div`\r\n  font-size: 8.6em;\r\n  letter-spacing: 1px;\r\n  color: ${({ theme }) => theme.colors.violet};\r\n\r\n  span {\r\n    ${({ isRunning }) => (isRunning ? `animation: colon 1s ease-in-out infinite` : null)};\r\n  }\r\n\r\n  @keyframes colon {\r\n    0% {\r\n      opacity: 0;\r\n    }\r\n\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  @media (orientation: landscape) {\r\n    padding: 20px 0;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 14em;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 15em;\r\n  }\r\n`;\r\n","import { formatTime } from '../../../assets/helpers/formatTime';\r\nimport { Wrapper, StyledTime } from './CounterDisplay.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CounterDisplay = ({ value, isRunning }) => {\r\n  return (\r\n    <Wrapper>\r\n      <StyledTime isRunning={isRunning}>{formatTime(value)}</StyledTime>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nCounterDisplay.propTypes = {\r\n  value: PropTypes.number,\r\n  isRunning: PropTypes.bool,\r\n};\r\n\r\nexport default CounterDisplay;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  width: 70%;\r\n  max-width: 350px;\r\n  height: 15%;\r\n  background-color: ${({ theme }) => theme.colors.violet};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  border: none;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  font-size: 4.2em;\r\n  letter-spacing: 2px;\r\n  border-radius: 10px;\r\n  transition: 0.5s ease-out;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:disabled {\r\n    box-shadow: none;\r\n    color: gray;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    width: 40%;\r\n    height: 12%;\r\n    font-size: 5em;\r\n  }\r\n\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    width: 50%;\r\n    height: 10%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 30%;\r\n    height: 15%;\r\n    cursor: pointer;\r\n    transition: 0.5s ease-out;\r\n    position: relative;\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      border: 5px solid ${({ theme }) => theme.colors.violet};\r\n      border-radius: 10px;\r\n      display: none;\r\n      transition: 0.4s ease;\r\n    }\r\n\r\n    &:hover:not([disabled]) {\r\n      background-color: ${({ theme }) => theme.colors.white};\r\n      color: ${({ theme }) => theme.colors.violet};\r\n      box-shadow: none;\r\n    }\r\n\r\n    &:hover::before {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n","import { StyledButton } from './Button.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ text, onClick, disabled }) => {\r\n  return (\r\n    <StyledButton onClick={onClick} disabled={disabled}>\r\n      {text}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n","export default __webpack_public_path__ + \"static/media/analog-watch-alarm_daniel-simion.4ef57659.mp3\";","import { useEffect, useState } from 'react';\r\nimport ReactHowler from 'react-howler';\r\nimport sound from '../../../assets/sounds/analog-watch-alarm_daniel-simion.mp3';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Sound = ({ counterValue, isRunning }) => {\r\n  const [play, setPlay] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (counterValue === 0) setPlay(true);\r\n  }, [counterValue]);\r\n\r\n  useEffect(() => {\r\n    if (isRunning) setPlay(false);\r\n  }, [isRunning]);\r\n\r\n  return <ReactHowler src={sound} playing={play} preload={true} />;\r\n};\r\n\r\nSound.propTypes = {\r\n  counterValue: PropTypes.number,\r\n  isRunning: PropTypes.bool,\r\n};\r\n\r\nexport default Sound;\r\n","import React, { useContext } from 'react';\r\nimport { Wrapper } from './Counter.style';\r\nimport CounterDisplay from '../../atoms/CounterDisplay/CounterDisplay';\r\nimport Button from '../../atoms/Button/Button';\r\n\r\nimport { PomodoroContext } from '../../../providers/PomodoroProvider';\r\nimport Sound from '../../atoms/Sound/Sound';\r\n\r\nconst Counter = () => {\r\n  const {\r\n    counter: { isRunning, counterValue },\r\n    tasks: { tasks },\r\n    handleStartStopCount,\r\n  } = useContext(PomodoroContext);\r\n\r\n  const isActiveTask = tasks.findIndex((task) => task.isActive === true) !== -1 ? true : false;\r\n  return (\r\n    <Wrapper>\r\n      <CounterDisplay value={counterValue} isRunning={isRunning} />\r\n      <Button onClick={handleStartStopCount} text={isRunning ? 'stop' : 'start'} disabled={isActiveTask ? false : true} />\r\n      <Sound counterValue={counterValue} isRunning={isRunning} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 90%;\r\n  height: 4%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n\r\n  @media (orientation: landscape) {\r\n    flex-direction: column;\r\n    width: 30%;\r\n    height: 100%;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    padding-top: 40px;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    width: 70%;\r\n  }\r\n\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    flex-direction: column;\r\n    width: 30%;\r\n    height: 100%;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    padding-top: 30px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    flex-direction: row;\r\n    width: 60%;\r\n    max-width: 800px;\r\n    height: 5%;\r\n    padding-top: 0px;\r\n  }\r\n`;\r\n\r\nexport const StyledInterval = styled.p`\r\n  width: 32%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  font-size: 1.4em;\r\n  border-radius: 6px;\r\n  color: ${({ theme }) => theme.colors.violet};\r\n  text-transform: uppercase;\r\n\r\n  &.active {\r\n    background-color: ${({ theme }) => theme.colors.violet};\r\n    color: ${({ theme }) => theme.colors.white};\r\n  }\r\n\r\n  @media (orientation: landscape) {\r\n    width: 80%;\r\n    height: 10%;\r\n    margin: 5px 0;\r\n    font-size: 1.5em;\r\n    letter-spacing: 1px;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 1.8em;\r\n  }\r\n\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    height: 10%;\r\n    width: 70%;\r\n    font-size: 1.8em;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 90%;\r\n    font-size: 2.2em;\r\n  }\r\n`;\r\n","import { useContext, useState, useEffect } from 'react';\r\nimport { Wrapper, StyledInterval } from './IntervalInfo.styled';\r\nimport { handleIntervalInfo } from '../../../assets/helpers/handleIntervalInfo';\r\nimport { PomodoroContext } from '../../../providers/PomodoroProvider';\r\n\r\nconst IntervalInfo = () => {\r\n  const {\r\n    counter: { isRunning, isWorkInterval, workIntervals },\r\n    settings: {\r\n      intervals: { longBreakIntervals },\r\n    },\r\n  } = useContext(PomodoroContext);\r\n\r\n  const [currentInterval, setCurrentInterval] = useState('work');\r\n\r\n  useEffect(() => {\r\n    setCurrentInterval(handleIntervalInfo(isRunning, isWorkInterval, workIntervals, longBreakIntervals));\r\n  }, [isWorkInterval]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledInterval className={currentInterval === 'work' ? 'active' : ''}>Work</StyledInterval>\r\n      <StyledInterval className={currentInterval === 'shortBreak' ? 'active' : ''}>Short Break</StyledInterval>\r\n      <StyledInterval className={currentInterval === 'longBreak' ? 'active' : ''}>Long Break</StyledInterval>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default IntervalInfo;\r\n","export const handleIntervalInfo = (isRunning, isWorkInterval, workIntervals, longBreakIntervals) => {\r\n  if (isRunning && !isWorkInterval && workIntervals % longBreakIntervals === 0) return 'longBreak';\r\n  if (!isRunning && !isWorkInterval) return 'shortBreak';\r\n\r\n  return 'work';\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: ${({ isSettingsActive }) => (isSettingsActive ? '0%' : '93%')};\r\n  background-color: ${({ theme }) => theme.colors.violet};\r\n  transition: 0.7s;\r\n  transition-timing-function: ease-in-out;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media (orientation: landscape) {\r\n    ${({ isSettingsActive }) => (isSettingsActive ? `top:0%;` : `top:88%;`)}\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    ${({ isSettingsActive }) => (isSettingsActive ? `top:0%;` : `top:93%;`)}\r\n  }\r\n\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    ${({ isSettingsActive }) => (isSettingsActive ? `top:0%;` : `top:88%;`)}\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 40%;\r\n    width: 900px;\r\n    top: 25%;\r\n    left: ${({ isSettingsActive }) => (isSettingsActive ? '-100px' : '-820px')};\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    box-shadow: ${({ theme, isSettingsActive }) => (isSettingsActive ? `10px 0px 20px 20px  ${theme.colors.black}` : `none`)};\r\n    border-radius: 0 20px 20px 0;\r\n    z-index: 100;\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      border-radius: 0 20px 20px 0;\r\n      display: ${({ isSettingsActive }) => (isSettingsActive ? 'block' : 'none')};\r\n      z-index: -1;\r\n      transition: 0.5s;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledText = styled.h1`\r\n  width: 90%;\r\n  height: 8%;\r\n  background-color: blue;\r\n  color: ${({ theme }) => theme.colors.white};\r\n  background-color: ${({ theme }) => theme.colors.violet};\r\n  border-bottom: 5px solid ${({ theme }) => theme.colors.white};\r\n  text-align: center;\r\n  font-size: 2.8em;\r\n  padding-top: 10px;\r\n  letter-spacing: 2px;\r\n  cursor: pointer;\r\n\r\n  @media (orientation: landscape) {\r\n    height: 20%;\r\n    padding-top: 5px;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    height: 8%;\r\n    font-size: 3.5em;\r\n    letter-spacing: 3px;\r\n    padding-top: 20px;\r\n  }\r\n\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    height: 14%;\r\n    padding-bottom: 5px;\r\n    padding-top: 5px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 90%;\r\n    width: 100px;\r\n    writing-mode: vertical-rl;\r\n    font-size: 4em;\r\n    padding-right: 15px;\r\n    letter-spacing: 4px;\r\n    transition: 0.5s;\r\n    border-left: 5px solid ${({ theme }) => theme.colors.white};\r\n    border-bottom: none;\r\n    border-radius: 0 20px 20px 0;\r\n\r\n    &:hover {\r\n      color: ${({ theme }) => theme.colors.red};\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledForm = styled.div`\r\n  width: 100%;\r\n  height: 92%;\r\n  background-color: ${({ theme }) => theme.colors.violet};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 10px 0;\r\n\r\n  @media (orientation: landscape) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    padding-top: 30px;\r\n  }\r\n\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    width: 90%;\r\n    padding-top: 10px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 70%;\r\n    padding-top: 10px;\r\n    background-color: ${({ theme }) => theme.colors.violet};\r\n  }\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  width: 60%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media (orientation: landscape) {\r\n    width: 100%;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    padding: 0 50px;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    padding-top: 20px;\r\n  }\r\n\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    padding-top: 10px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    flex-direction: row;\r\n    width: 100%;\r\n    justify-content: space-around;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 80%;\r\n  justify-content: center;\r\n  padding: 15px 0;\r\n  justify-content: space-between;\r\n\r\n  p {\r\n    font-size: 2.5em;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    width: 70%;\r\n  }\r\n\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 70%;\r\n  }\r\n`;\r\n\r\nexport const StyledLabel = styled.label`\r\n  font-size: 2.4em;\r\n  color: ${({ theme }) => theme.colors.white};\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 2.5em;\r\n  }\r\n\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    font-size: 2.2em;\r\n  }\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  border: none;\r\n  background-color: transparent;\r\n  font-size: 2.5em;\r\n  width: 20%;\r\n  padding-left: 15px;\r\n  color: ${({ theme }) => theme.colors.white};\r\n\r\n  &:focus {\r\n    outline-color: ${({ theme }) => theme.colors.red};\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 2.6em;\r\n  }\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    font-size: 2.5em;\r\n  }\r\n`;\r\n","import { Wrapper, StyledLabel, StyledInput } from './FormField.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FormField = ({ onChange, value, label, name, id, type = 'number' }) => {\r\n  return (\r\n    <Wrapper>\r\n      <StyledLabel htmlFor={id}>{label}:</StyledLabel>\r\n      <StyledInput name={name} id={id} type={type} onChange={onChange} value={value} min=\"1\" required />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nFormField.propTypes = {\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.number,\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default FormField;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  font-size: 2em;\r\n  padding: 10px 15px;\r\n  letter-spacing: 1px;\r\n  background-color: ${({ theme }) => theme.colors.red};\r\n  border: none;\r\n  border-radius: 8px;\r\n  box-shadow: 0px 0px 10px ${({ theme }) => theme.colors.violet};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  margin: 8px 0;\r\n  border: 4px solid transparent;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    width: 55%;\r\n    font-size: 2.5em;\r\n    padding: 15px 20px;\r\n    margin: 20px 0;\r\n  }\r\n\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    width: 40%;\r\n    font-size: 2em;\r\n    padding: 10px 15px;\r\n    margin: 10px 0;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 40%;\r\n    cursor: pointer;\r\n    transition: 0.5s;\r\n    padding: 8px 15px;\r\n\r\n    &:hover {\r\n      border: 4px solid ${({ theme }) => theme.colors.white};\r\n      background-color: ${({ theme }) => theme.colors.violet};\r\n    }\r\n  }\r\n`;\r\n","import { StyledButton } from './FormButton.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FormButton = ({ onClick, text }) => {\r\n  return <StyledButton onClick={onClick}>{text}</StyledButton>;\r\n};\r\n\r\nFormButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default FormButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledText = styled.p`\r\n  color: ${({ theme }) => theme.colors.red};\r\n  font-size: 1.6em;\r\n  font-weight: bold;\r\n  width: 100%;\r\n  padding-left: 40px;\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 2em;\r\n    width: 80%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 2.4em;\r\n  }\r\n`;\r\n","import { StyledText } from './ErrorMessage.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ErrorMessage = ({ text }) => {\r\n  return <StyledText>{text}</StyledText>;\r\n};\r\n\r\nErrorMessage.propTypes = {\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { StyledForm, ButtonsContainer } from './SettingsForm.style';\r\nimport { useLocalStorage } from '../../../hooks/useLocalStorage';\r\nimport { initialSettings } from './../../../assets/initialSettings';\r\nimport { isSettingsFormValid } from '../../../assets/helpers/isSettingsFormValid';\r\nimport { PomodoroContext } from '../../../providers/PomodoroProvider';\r\n\r\nimport FormField from '../../atoms/FormField/FormField';\r\nimport FormButton from '../../atoms/FormButton/FormButton';\r\nimport ErrorMessage from '../../atoms/ErrorMessage/ErrorMessage';\r\n\r\nconst initialErrors = { workTime: null, shortBreak: null, longBreak: null, longBreakIntervals: null };\r\n\r\nconst SettingsForm = () => {\r\n  const { settings, saveSettings, restoreDefaultSettings } = useContext(PomodoroContext);\r\n  const { getDataFromStorage } = useLocalStorage();\r\n  const [settingsValues, setSettingsValues] = useState(getDataFromStorage('intervals') || initialSettings);\r\n  const [formErrors, setFormErrors] = useState(initialErrors);\r\n\r\n  useEffect(() => {\r\n    setSettingsValues(settings.intervals);\r\n  }, [settings.intervals]);\r\n\r\n  useEffect(() => {\r\n    if (!settings.isSettingsActive && formErrors !== initialErrors) {\r\n      setSettingsValues(getDataFromStorage('intervals') || initialSettings);\r\n      setFormErrors(initialErrors);\r\n    }\r\n  }, [settings.isSettingsActive]);\r\n\r\n  const handleSettingsInputChange = (e) => {\r\n    setSettingsValues({ ...settingsValues, [e.target.name]: Number(e.target.value) });\r\n  };\r\n\r\n  const handleSubmitForm = () => {\r\n    const { isValid, errors } = isSettingsFormValid(settingsValues);\r\n    setFormErrors(initialErrors);\r\n    if (isValid) {\r\n      saveSettings(settingsValues);\r\n      setSettingsValues(getDataFromStorage('intervals'));\r\n    } else {\r\n      setFormErrors(errors);\r\n    }\r\n  };\r\n\r\n  const handleDefaultSettings = () => {\r\n    restoreDefaultSettings();\r\n    setFormErrors(initialErrors);\r\n  };\r\n\r\n  return (\r\n    <StyledForm>\r\n      <FormField\r\n        name=\"workTime\"\r\n        id=\"workTime\"\r\n        label=\"Work time\"\r\n        value={settingsValues.workTime || 25}\r\n        onChange={handleSettingsInputChange}\r\n      />\r\n      {formErrors.workTime ? <ErrorMessage text={formErrors.workTime} /> : null}\r\n      <FormField\r\n        name=\"shortBreak\"\r\n        id=\"shortBreak\"\r\n        label=\"Short break\"\r\n        value={settingsValues.shortBreak || 5}\r\n        onChange={handleSettingsInputChange}\r\n      />\r\n      {formErrors.shortBreak ? <ErrorMessage text={formErrors.shortBreak} /> : null}\r\n      <FormField\r\n        name=\"longBreak\"\r\n        id=\"longtBreak\"\r\n        label=\"Long break\"\r\n        value={settingsValues.longBreak || 20}\r\n        onChange={handleSettingsInputChange}\r\n      />\r\n      {formErrors.longBreak ? <ErrorMessage text={formErrors.longBreak} /> : null}\r\n      <FormField\r\n        name=\"longBreakIntervals\"\r\n        id=\"longtBreakIntervals\"\r\n        label=\"Long break intervals\"\r\n        value={settingsValues.longBreakIntervals || 4}\r\n        onChange={handleSettingsInputChange}\r\n      />\r\n      {formErrors.longBreakIntervals ? <ErrorMessage text={formErrors.longBreakIntervals} /> : null}\r\n      <ButtonsContainer>\r\n        <FormButton onClick={handleSubmitForm} text=\"Save settings\" />\r\n        <FormButton onClick={handleDefaultSettings} text=\"Default settings\" />\r\n      </ButtonsContainer>\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default SettingsForm;\r\n","export const isSettingsFormValid = (intervals) => {\r\n  const { workTime, shortBreak, longBreak, longBreakIntervals } = intervals;\r\n  const errors = { workTime: null, shortBreak: null, longBreak: null, longBreakIntervals: null };\r\n\r\n  const isWorkTimeValid = workTime >= 5;\r\n  const isShortBreakValid = shortBreak >= 1;\r\n  const isLongBreakValid = longBreak >= 5;\r\n  const isLongBreakIntervalsValid = longBreakIntervals >= 2;\r\n\r\n  if (!isWorkTimeValid) {\r\n    errors.workTime = 'Min work time is 5min';\r\n  }\r\n\r\n  if (!isShortBreakValid) {\r\n    errors.shortBreak = 'Min short break is 1min';\r\n  }\r\n\r\n  if (!isLongBreakValid) {\r\n    errors.longBreak = 'Min long break is 5min';\r\n  }\r\n\r\n  if (!isLongBreakIntervalsValid) {\r\n    errors.longBreakIntervals = 'Min long break intervals is 2';\r\n  }\r\n\r\n  const isFormValid = isWorkTimeValid && isShortBreakValid && isLongBreakValid && isLongBreakIntervalsValid ? true : false;\r\n\r\n  return { isValid: isFormValid, errors: errors };\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { Wrapper, StyledText } from './Settings.style';\r\n\r\nimport { PomodoroContext } from '../../../providers/PomodoroProvider';\r\nimport SettingsForm from '../SettingsForm/SettingsForm';\r\n\r\nconst Settings = () => {\r\n  const { settings, showHideSettings } = useContext(PomodoroContext);\r\n  return (\r\n    <Wrapper isSettingsActive={settings.isSettingsActive}>\r\n      <StyledText onClick={showHideSettings}>settings</StyledText>\r\n      <SettingsForm />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { PomodoroContext } from '../../../providers/PomodoroProvider';\r\n\r\nconst Wrapper = styled.div`\r\n  display: ${({ isSettingsActive }) => (isSettingsActive ? 'block' : 'none')};\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: transparent;\r\n  animation: backgroundAnimation 1s linear forwards;\r\n\r\n  @keyframes backgroundAnimation {\r\n    from {\r\n      backdrop-filter: blur(0px);\r\n    }\r\n\r\n    to {\r\n      backdrop-filter: blur(3px);\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackgroundBlured = () => {\r\n  const {\r\n    settings: { isSettingsActive },\r\n  } = useContext(PomodoroContext);\r\n\r\n  return <Wrapper isSettingsActive={isSettingsActive}></Wrapper>;\r\n};\r\n\r\nexport default BackgroundBlured;\r\n","import { Wrapper } from './PomodoroTimer.style';\r\nimport ActiveTask from '../../components/molecules/ActiveTask/ActiveTask';\r\nimport Counter from '../../components/molecules/Counter/Counter';\r\nimport IntervalInfo from '../../components/molecules/IntervalInfo/IntervalInfo';\r\nimport Settings from '../../components/organisms/Settings/Settings';\r\n\r\nimport BackgroundBlured from '../../components/atoms/BackgroundBlured/BackgroundBlured';\r\n\r\nconst PomodoroTimer = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ActiveTask />\r\n      <IntervalInfo />\r\n      <Counter />\r\n      <BackgroundBlured />\r\n      <Settings />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PomodoroTimer;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Wrapper = styled.main`\r\n  width: 100%;\r\n  height: 90%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media (min-width: 1024px) {\r\n    padding-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const TimerLink = styled(Link)`\r\n  font-size: 2.2em;\r\n  height: 15%;\r\n  color: ${({ theme }) => theme.colors.red};\r\n  letter-spacing: 1px;\r\n  text-decoration: none;\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 3.5em;\r\n    padding-top: 10px;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 20%;\r\n  height: ${({ isOpen }) => (isOpen ? '20%' : '8%')};\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  margin: 10px 0;\r\n\r\n  @media (orientation: landscape) {\r\n    width: 80%;\r\n    height: ${({ isOpen }) => (isOpen ? '30%' : '10%')};\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    height: ${({ isOpen }) => (isOpen ? '20%' : '8%')};\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    width: 80%;\r\n  }\r\n  @media (min-width: 1024px) {\r\n    width: 80%;\r\n    height: ${({ isOpen }) => (isOpen ? '15%' : '8%')};\r\n    max-width: 800px;\r\n    margin: none;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  width: 90%;\r\n  height: ${({ isOpen }) => (isOpen ? '20%' : '100%')};\r\n  margin: 0 5%;\r\n  background-color: transparent;\r\n  border-radius: 8px;\r\n  border: 2px dashed ${({ theme }) => theme.colors.violetTransparent};\r\n  color: ${({ theme }) => theme.colors.violet};\r\n  font-size: 2.2em;\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 3.4em;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 90%;\r\n    margin: 0;\r\n    height: ${({ isOpen }) => (isOpen ? '0%' : '100%')};\r\n    transition:  .5s;\r\n\r\n\r\n    &:hover {\r\n      \r\n      letter-spacing:1px;\r\n  }\r\n\r\n`;\r\n","import { StyledButton } from './AddTaskButton.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddTaskButton = ({ onClick, isOpen }) => {\r\n  return (\r\n    <StyledButton onClick={onClick} isOpen={isOpen}>\r\n      Add task...\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nAddTaskButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  isOpen: PropTypes.bool,\r\n};\r\n\r\nexport default AddTaskButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledForm = styled.form`\r\n  width: 90%;\r\n  height: 90%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n\r\n  @media (orientation: landscape) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n  }\r\n`;\r\n\r\nexport const StyledTaskInput = styled.input`\r\n  width: 90%;\r\n  height: 30%;\r\n  border: none;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.violet};\r\n  background-color: transparent;\r\n  font-size: 1.8em;\r\n  padding-bottom: 5px;\r\n  padding-left: 5px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  @media (orientation: landscape) {\r\n    height: 50%;\r\n    width: 70%;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    width: 90%;\r\n    height: 30%;\r\n    font-size: 2.6em;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 30%;\r\n    font-size: 2.5em;\r\n    padding-bottom: 5px;\r\n  }\r\n`;\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n  width: 100%;\r\n  height: 30%;\r\n  display: flex;\r\n\r\n  @media (orientation: landscape) {\r\n    width: 25%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    width: 90%;\r\n    height: 40%;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 40%;\r\n  }\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  height: 90%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${({ theme }) => theme.colors.violet};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-size: 1.7em;\r\n  padding: 5px 14px;\r\n  border: none;\r\n  letter-spacing: 1px;\r\n  margin: 0 5px;\r\n  border-radius: 6px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  @media (orientation: landscape) {\r\n    height: 35%;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 2.2em;\r\n    padding: 8px 25px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 90%;\r\n    transition: 0.5s;\r\n    position: relative;\r\n    border: 4px solid transparent;\r\n    font-size: 2em;\r\n    padding: 0px 20px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      color: ${({ theme }) => theme.colors.violet};\r\n      background-color: ${({ theme }) => theme.colors.white};\r\n      border: 4px solid ${({ theme }) => theme.colors.violet};\r\n    }\r\n  }\r\n`;\r\n","import { useState, useContext } from 'react';\r\nimport { StyledForm, StyledTaskInput, ButtonsWrapper, FormButton } from './AddTaskForm.style';\r\nimport { PomodoroContext } from '../../../providers/PomodoroProvider';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddTaskForm = ({ handleOpen }) => {\r\n  const [taskInputValue, setTaskInputValue] = useState('');\r\n  const { handleAddTask } = useContext(PomodoroContext);\r\n\r\n  const handleInput = (e) => {\r\n    setTaskInputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleAddTask(taskInputValue);\r\n    setTaskInputValue('');\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={handleSubmit}>\r\n      <StyledTaskInput type=\"text\" placeholder=\"New task...\" required value={taskInputValue} onChange={handleInput} />\r\n      <ButtonsWrapper>\r\n        <FormButton type=\"submit\">Save</FormButton>\r\n        <FormButton onClick={handleOpen}>Cancel</FormButton>\r\n      </ButtonsWrapper>\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nAddTaskForm.propTypes = {\r\n  handleOpen: PropTypes.func,\r\n};\r\n\r\nexport default AddTaskForm;\r\n","import { useState } from 'react';\r\nimport { Wrapper } from './AddTask.style';\r\nimport AddTaskButton from '../../atoms/AddTaskButton/AddTaskButton';\r\nimport AddTaskForm from '../../molecules/AddTaskForm/AddTaskForm';\r\n\r\nconst AddTask = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleOpen = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Wrapper isOpen={isOpen}>\r\n      {isOpen ? <AddTaskForm handleOpen={handleOpen} /> : ''}\r\n      {isOpen ? '' : <AddTaskButton onClick={handleOpen} isOpen={isOpen} />}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.ul`\r\n  width: 90%;\r\n  height: 80%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  overflow: auto;\r\n\r\n  @media (orientation: landscape) {\r\n    width: 80%;\r\n    height: 70%;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    width: 80%;\r\n    height: 75%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 80%;\r\n    max-width: 800px;\r\n    height: 75%;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport const Wrapper = styled.li`\r\n  position: relative;\r\n  width: 100%;\r\n  height: ${({ isOpen }) => (isOpen ? '65%' : '10%')};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${({ theme, isActive }) => (isActive ? theme.colors.violet : theme.colors.violetTransparent)};\r\n  border-radius: 8px;\r\n  margin: 3px 0;\r\n  padding: 0 10px;\r\n  color: ${({ theme }) => theme.colors.white};\r\n  transition: height 0.5s;\r\n  flex-shrink: 0;\r\n\r\n  p {\r\n    display: ${({ isOpen }) => (isOpen ? ' none' : 'flex')};\r\n    align-items: center;\r\n    height: 100%;\r\n    width: 90%;\r\n    font-size: 1.8em;\r\n    text-align: left;\r\n    padding-left: 10%;\r\n\r\n    &::first-letter {\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n\r\n  @media (orientation: landscape) {\r\n    height: ${({ isOpen }) => (isOpen ? '90%' : '20%')};\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    height: ${({ isOpen }) => (isOpen ? '50%' : '10%')};\r\n    margin: 5px 0;\r\n    p {\r\n      font-size: 2.5em;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    height: ${({ isOpen }) => (isOpen ? '60%' : '10%')};\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    height: ${({ isOpen }) => (isOpen ? '65%' : '8%')};\r\n    min-height: 60px;\r\n    padding-left: 2%;\r\n    width: 90%;\r\n    cursor: pointer;\r\n    transition: 0.5s;\r\n\r\n    p {\r\n      font-size: 2.5em;\r\n      padding-left: 2%;\r\n      transition: 0.5s;\r\n    }\r\n\r\n    &:hover p {\r\n      letter-spacing: 1px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FilteredIcon = ({ isActive, ...rest }) => <FontAwesomeIcon {...rest} />;\r\n\r\nexport const StyledIcon = styled(FilteredIcon)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 2%;\r\n  transform: translateY(-50%);\r\n  color: ${({ theme, isActive }) => (isActive ? theme.colors.white : theme.colors.violet)};\r\n  font-size: 2.5em;\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 3.5em;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 3em;\r\n\r\n    &:hover {\r\n      color: ${({ theme }) => theme.colors.green};\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledForm = styled.form`\r\n  display: ${({ isOpen }) => (isOpen ? 'flex' : 'none')};\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 90%;\r\n  height: 80%;\r\n  padding-left: 20px;\r\n  animation: showForm 1s ease-in-out;\r\n\r\n  div {\r\n    width: 100%;\r\n    height: 50%;\r\n    margin-bottom: 5px;\r\n  }\r\n  @media (orientation: landscape) {\r\n    div {\r\n      width: 100%;\r\n      height: 35%;\r\n      margin-bottom: 5px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    padding-left: 40px;\r\n\r\n    div {\r\n      height: 30%;\r\n      margin-bottom: 5px;\r\n    }\r\n  }\r\n\r\n  @keyframes showForm {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledLabel = styled.label`\r\n  width: 40%;\r\n  font-size: 1.3em;\r\n  align-self: flex-start;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.green};\r\n  margin-bottom: 2%;\r\n  padding-left: 10px;\r\n  letter-spacing: 1px;\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 1.8em;\r\n  }\r\n\r\n  @media (orientation: landscape) {\r\n    margin-bottom: 3px;\r\n  }\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    margin-bottom: 1%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 1.8em;\r\n    padding-bottom: 5px;\r\n    width: 20%;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    font-size: 2.2em;\r\n  }\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  width: 90%;\r\n  font-size: 2em;\r\n  border: none;\r\n  background-color: transparent;\r\n  color: ${({ theme }) => theme.colors.white};\r\n  margin-bottom: 4%;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    color: ${({ theme }) => theme.colors.green};\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 2.5em;\r\n    margin-bottom: 2%;\r\n  }\r\n\r\n  @media (orientation: landscape) {\r\n    font-size: 1.8em;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 2.5em;\r\n    margin-bottom: 2%;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    font-size: 2.6em;\r\n  }\r\n`;\r\n\r\nexport const StyledTextArea = styled.textarea`\r\n  width: 90%;\r\n  height: 100%;\r\n  font-size: 1.6em;\r\n  background-color: transparent;\r\n  border: none;\r\n  color: ${({ theme }) => theme.colors.white};\r\n  overflow: scroll;\r\n  overflow: hidden;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    color: ${({ theme }) => theme.colors.green};\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 2.2em;\r\n  }\r\n\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: inherit;\r\n    height: 100%;\r\n    font-size: 2.2em;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    font-size: 2.2em;\r\n  }\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (min-width: 700px) {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    padding-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  font-size: 1.5em;\r\n  padding: 2px 10px;\r\n  margin: 0 3px;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: ${({ theme }) => theme.colors.violet};\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  @media (min-width: 700px) {\r\n    font-size: 2.2em;\r\n    padding: 4px 15px;\r\n    margin: 0 6px;\r\n  }\r\n\r\n  @media (min-width: 700px) and (orientation: landscape) {\r\n    font-size: 2em;\r\n    padding: 3px 15px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    cursor: pointer;\r\n    font-size: 2.2em;\r\n    transition: 0.5s;\r\n\r\n    &:hover {\r\n      background-color: ${({ theme }) => theme.colors.violet};\r\n      color: ${({ theme }) => theme.colors.white};\r\n    }\r\n  }\r\n`;\r\n","import { useEffect, useState, useContext } from 'react';\r\nimport { StyledForm, StyledLabel, StyledInput, StyledTextArea, ButtonContainer, StyledButton } from './TaskEditForm.style';\r\nimport { PomodoroContext } from '../../../providers/PomodoroProvider';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TaskEditForm = ({ task, isOpen, handleClose }) => {\r\n  const [formValues, setFormValues] = useState({ title: '', description: '' });\r\n  const initialTaskValues = { title: task.title, description: task.description };\r\n  const { handleDeleteTask, handleSaveTask, showTaskDetails } = useContext(PomodoroContext);\r\n\r\n  useEffect(() => {\r\n    setFormValues(initialTaskValues);\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormValues({ ...formValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setFormValues(initialTaskValues);\r\n    handleClose(e);\r\n  };\r\n\r\n  const handleSaveModifiedTask = (e) => {\r\n    e.preventDefault();\r\n    handleSaveTask(e, formValues.title, formValues.description);\r\n    showTaskDetails(e);\r\n  };\r\n\r\n  return (\r\n    <StyledForm isOpen={isOpen ? true : false}>\r\n      <StyledLabel htmlFor=\"title\">Task title</StyledLabel>\r\n      <StyledInput type=\"text\" name=\"title\" value={formValues.title} id=\"title\" onChange={handleInputChange} />\r\n      <StyledLabel htmlFor=\"description\">Description</StyledLabel>\r\n      <div>\r\n        <StyledTextArea\r\n          id=\"description\"\r\n          name=\"description\"\r\n          rows=\"2\"\r\n          maxLength=\"150\"\r\n          value={formValues.description}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Write task descrition...\"\r\n        />\r\n      </div>\r\n\r\n      <ButtonContainer>\r\n        <StyledButton onClick={handleSaveModifiedTask}>Save</StyledButton>\r\n        <StyledButton onClick={handleDeleteTask}>Delete</StyledButton>\r\n        <StyledButton onClick={handleCancel}>Cancel</StyledButton>\r\n      </ButtonContainer>\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nTaskEditForm.propTypes = {\r\n  task: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n    isActive: PropTypes.bool,\r\n  }),\r\n  isOpen: PropTypes.bool,\r\n  handleClose: PropTypes.func,\r\n};\r\n\r\nexport default TaskEditForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledTime = styled.div`\r\n  width: 90%;\r\n  height: 10%;\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  padding: 5px 0;\r\n  border-top: 2px solid ${({ theme }) => theme.colors.white};\r\n\r\n  @media (min-width: 700px) {\r\n    font-size: 2.2em;\r\n    padding: 10px 0;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 2.4em;\r\n  }\r\n`;\r\n","import { StyledTime } from './TaskTotalTime.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TaskTotalTime = ({ time }) => {\r\n  const hours = Math.floor(time / 3600).toFixed(0);\r\n  const minutes = ((time % 3600) / 60).toFixed(0);\r\n\r\n  return <StyledTime>{` Total work time: ${hours}h ${minutes}m`}</StyledTime>;\r\n};\r\n\r\nTaskTotalTime.propTypes = {\r\n  time: PropTypes.number,\r\n};\r\n\r\nexport default TaskTotalTime;\r\n","import { Wrapper, StyledIcon } from './Task.style';\r\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport TaskEditForm from '../TaskEditForm/TaskEditForm';\r\nimport PropTypes from 'prop-types';\r\nimport TaskTotalTime from '../../atoms/TaskTotalTime/TaskTotalTime';\r\n\r\nconst Task = ({ title, isActive, id, task, handleSetActiveTask, showTaskDetails }) => {\r\n  return (\r\n    <Wrapper id={id} isActive={isActive ? true : false} isOpen={task.isOpen}>\r\n      <StyledIcon icon={faCheckCircle} isActive={isActive ? true : false} onClick={handleSetActiveTask} />\r\n      <p onClick={showTaskDetails}>{title}</p>\r\n      {task.isOpen && <TaskEditForm isOpen={task.isOpen} task={task} handleClose={showTaskDetails} />}\r\n      {task.isOpen && <TaskTotalTime time={task.totalTime} />}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nTask.propTypes = {\r\n  title: PropTypes.string,\r\n  isActive: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  id: PropTypes.number,\r\n  task: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n    isActive: PropTypes.bool,\r\n  }),\r\n};\r\n\r\nexport default Task;\r\n","import { useContext } from 'react';\r\nimport { Wrapper } from './TasksList.style';\r\nimport { PomodoroContext } from '../../../providers/PomodoroProvider';\r\nimport Task from '../../molecules/Task/Task';\r\n\r\nconst TasksList = () => {\r\n  const {\r\n    tasks: { tasks },\r\n    handleDeleteTask,\r\n    showTaskDetails,\r\n    handleSetActiveTask,\r\n  } = useContext(PomodoroContext);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {tasks.map((task) => {\r\n        return (\r\n          <Task\r\n            key={task.id}\r\n            title={task.title}\r\n            isActive={task.isActive}\r\n            showTaskDetails={showTaskDetails}\r\n            id={task.id}\r\n            task={task}\r\n            handledeleteTask={handleDeleteTask}\r\n            handleSetActiveTask={handleSetActiveTask}\r\n          />\r\n        );\r\n      })}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TasksList;\r\n","import { Wrapper, TimerLink } from './PomodoroTasks.style';\r\nimport AddTask from '../../components/organisms/AddTask/AddTask';\r\nimport TasksList from '../../components/organisms/TasksList/TasksList';\r\n\r\nconst PomodoroTasks = () => {\r\n  return (\r\n    <Wrapper>\r\n      <AddTask />\r\n      <TasksList />\r\n      <TimerLink to=\"/\">Return to timer</TimerLink>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PomodoroTasks;\r\n","import { GlobalStyle } from '../assets/styles/GlobalStyle';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from '../assets/styles/theme';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport MainTemplate from '../components/templates/MainTemplate';\nimport { PomodoroProvider } from '../providers/PomodoroProvider';\nimport PomodoroTimer from './PomodoroTimer/PomodoroTimer';\nimport PomodoroTasks from './PomodoroTasks/PomodoroTasks';\n\nfunction Root() {\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <MainTemplate>\n          <PomodoroProvider>\n            <Switch>\n              <Route path=\"/\" exact>\n                <PomodoroTimer />\n              </Route>\n              <Route path=\"/tasks\">\n                <PomodoroTasks />\n              </Route>\n            </Switch>\n          </PomodoroProvider>\n        </MainTemplate>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './views/Root';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}